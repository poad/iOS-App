name: build
 
on:
  push:
    branches:
    - main 
  pull_request:
    branches:
      - main

jobs:
  build: # make sure build/ci work properly
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Show Xcode version
        env:
          DEVELOPER_DIR: /Applications/Xcode_12.1.app/
        run: xcodebuild -version
      - name: Build
        env:
          DEVELOPER_DIR: /Applications/Xcode_12.1.app/
        run: |
          cd HelloApp
          device=$(instruments -s -devices | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}')
          if [ "$(ls -A | grep -i \\.xcworkspace\$)" ]; then filetype_parameter="workspace" && file_to_build="$(ls -A | grep -i \\.xcworkspace\$)"; else filetype_parameter="project" && file_to_build="$(ls -A | grep -i \\.xcodeproj\$)"; fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          xcodebuild build-for-testing -scheme "HelloApp" -"$filetype_parameter" "$file_to_build" -destination "platform=iOS Simulator,name=$device"
      - name: Test
        env:
          DEVELOPER_DIR: /Applications/Xcode_12.1.app/
        run: |
          cd HelloApp
          device=$(instruments -s -devices | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}')
          if [ "$(ls -A | grep -i \\.xcworkspace\$)" ]; then filetype_parameter="workspace" && file_to_build="$(ls -A | grep -i \\.xcworkspace\$)"; else filetype_parameter="project" && file_to_build="$(ls -A | grep -i \\.xcodeproj\$)"; fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          xcodebuild test-without-building -scheme "HelloApp" -"$filetype_parameter" "$file_to_build" -destination "platform=iOS Simulator,name=$device"
